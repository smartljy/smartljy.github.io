<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Volim te</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-01-16T12:19:25.725Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Li</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>关于swf格式转视频格式的操作</title>
    <link href="http://yoursite.com/2019/01/17/art5/"/>
    <id>http://yoursite.com/2019/01/17/art5/</id>
    <published>2019-01-16T18:58:13.000Z</published>
    <updated>2019-01-16T12:19:25.725Z</updated>
    
    <content type="html"><![CDATA[<h3 id="使用工具："><a href="#使用工具：" class="headerlink" title="使用工具："></a>使用工具：</h3><ol><li>格式工厂</li><li>会声会影</li></ol><h3 id="操作方法："><a href="#操作方法：" class="headerlink" title="操作方法："></a>操作方法：</h3><ol><li>使用格式工厂提取swf文件中的Bgm</li><li>使用会声会影将swf与Bgm文件合成</li><li>使用会声会影转换输出文件格式为视频格式</li></ol><h3 id="注：格式工厂直接转换的swf文件存在只有音乐，画面不动的问题"><a href="#注：格式工厂直接转换的swf文件存在只有音乐，画面不动的问题" class="headerlink" title="注：格式工厂直接转换的swf文件存在只有音乐，画面不动的问题"></a>注：格式工厂直接转换的swf文件存在只有音乐，画面不动的问题</h3>]]></content>
    
    <summary type="html">
    
      swf格式转视频
    
    </summary>
    
    
      <category term="杂谈" scheme="http://yoursite.com/tags/%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>关于C/S系统使用NPOI导出Excel并下载的方法</title>
    <link href="http://yoursite.com/2019/01/17/art4/"/>
    <id>http://yoursite.com/2019/01/17/art4/</id>
    <published>2019-01-16T18:58:04.000Z</published>
    <updated>2019-01-16T12:19:03.211Z</updated>
    
    <content type="html"><![CDATA[<h1 id="关于C-S系统使用NPOI导出Excel并下载的方法"><a href="#关于C-S系统使用NPOI导出Excel并下载的方法" class="headerlink" title="关于C/S系统使用NPOI导出Excel并下载的方法"></a>关于C/S系统使用NPOI导出Excel并下载的方法</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">XSSFWorkbook workbook = new XSSFWorkbook();//读取xlsx格式</span><br><span class="line">            //HSSFWorkbook workbook = new HSSFWorkbook();//读取xls格式</span><br><span class="line">            ISheet sheet = workbook.CreateSheet(&quot;Sheet1&quot;);</span><br><span class="line">            //表头</span><br><span class="line">            IRow row1 = sheet.CreateRow(0);</span><br><span class="line">            for (int i = 0; i &lt; a.Columns.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                row1.CreateCell(i).SetCellValue(a.Columns[i].ColumnName);</span><br><span class="line">            &#125;</span><br><span class="line">            for (int k = 0; k &lt; a.Rows.Count; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                IRow row = sheet.CreateRow(k + 1);</span><br><span class="line">                //循环列赋值</span><br><span class="line">                for (int l = 0; l &lt; a.Columns.Count; l++)</span><br><span class="line">                &#123;</span><br><span class="line">                    row.CreateCell(l).SetCellValue(a.Rows[k][l].ToString());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            FileStream d = new FileStream(&quot;c:\\n.xlsx&quot;, FileMode.Create, FileAccess.ReadWrite);</span><br><span class="line">            workbook.Write(d);</span><br><span class="line">            d.Close();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      NPOI使用
    
    </summary>
    
      <category term="C#" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="C#" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>【C#6.0语法】模版字符串</title>
    <link href="http://yoursite.com/2019/01/17/art3/"/>
    <id>http://yoursite.com/2019/01/17/art3/</id>
    <published>2019-01-16T18:57:54.000Z</published>
    <updated>2019-01-16T12:18:51.465Z</updated>
    
    <content type="html"><![CDATA[<h1 id="【C-6-0语法】模版字符串"><a href="#【C-6-0语法】模版字符串" class="headerlink" title="【C#6.0语法】模版字符串"></a>【C#6.0语法】模版字符串</h1><p>什么是模版字符串？还记得你们用过的格式化字符串吗？<code>string.Format()</code> 这个方法，是最常用的方法之一。下面是一个简单的例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var name = &quot;张三&quot;;</span><br><span class="line">var age = 24;</span><br><span class="line">var address = &quot;北京市朝阳区&quot;;</span><br><span class="line">string.Format(&quot;我是&#123;0&#125;，今年&#123;1&#125;，家住在&#123;2&#125;&quot;, name, age, address);</span><br><span class="line">//输出 我是张三，今年24，家住在北京市朝阳区</span><br></pre></td></tr></table></figure><p>这样的好处是解决了拼字符串的性能问题，但又会带来一种问题，那就是长篇引起的索引问题。试想一下，如果在长篇字符串中定位索引，你是不是会吐血？比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">string.Format(@&quot;</span><br><span class="line">--从Project表中加入项目数据</span><br><span class="line">select * from (</span><br><span class="line">    select ProjectName as orderCode,ProjectGUID,ProjectName,</span><br><span class="line">        &apos;--&apos; AS &apos;项目合计&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;以前年度合计&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011年合计&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-01&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-02&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-03&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-04&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-05&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-06&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-07&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-08&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-09&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-10&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-11&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-12&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;以后年度合计&apos;</span><br><span class="line">    from Project </span><br><span class="line">    where ProjectGUID=&#123;0&#125;</span><br><span class="line"></span><br><span class="line">----项目1    8FA659C8-3DA9-4330-B277-9B517E67606D    项目1    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">union all</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">--从产品表和Project表中加入合计行数据</span><br><span class="line">    select Project.ProjectName+&apos;.&apos;+a.ProductCode as orderCode,a.ProductGUID,a.ProductName,</span><br><span class="line">        &apos;--&apos; AS &apos;项目合计&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;以前年度合计&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011年合计&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-01&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-02&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-03&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-04&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-05&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-06&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-07&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-08&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-09&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-10&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-11&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;2011-12&apos;,</span><br><span class="line">        &apos;--&apos; AS &apos;以后年度合计&apos;</span><br><span class="line">    from #product a</span><br><span class="line">    left join Project on a.ProjectGUID=Project.ProjectGUID</span><br><span class="line"></span><br><span class="line">----项目1    8FA659C8-3DA9-4330-B277-9B517E67606D    项目1    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --</span><br><span class="line">----项目1.00    00000000-0000-0000-0000-000000000000    合计    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --</span><br><span class="line">----项目1.产品1    18908255-DB67-4EA3-A231-8BB39D5B748B    产品1    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --</span><br><span class="line">----项目1.产品2    EDB216A9-EBB8-4F2C-AE4E-0A989EC7A993    产品2    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --</span><br><span class="line">----项目1.产品3    7040241F-5A66-4F17-AACA-7CBE2FB3BCB9    产品3    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --</span><br><span class="line">----项目1.产品4    108778CD-47C0-4258-9CB6-1FBE90CDEBDA    产品4    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --</span><br><span class="line">----项目1.产品5    43F7B9BA-EF91-4A38-A048-090179F33C9B    产品5    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --    --</span><br><span class="line"></span><br><span class="line">```</span><br><span class="line">union ALL</span><br><span class="line"></span><br><span class="line">--从产品表和Project表、#tempSaleDtl3中加入类型行数据</span><br><span class="line">select c.ProjectName+&apos;.&apos;+b.ProductCode+&apos;.&apos;+a.typecode as orderCode,a.ProductGUID, a.[type],</span><br><span class="line">    cast(a.[项目合计] as varchar(20)),</span><br><span class="line">    cast(a.[以前年度合计] as varchar(20)),</span><br><span class="line">    cast(a.[2011年合计] as varchar(20)),</span><br><span class="line">    cast(a.[2011-01] as varchar(20)),</span><br><span class="line">    cast(a.[2011-02] as varchar(20)),</span><br><span class="line">    cast(a.[2011-03] as varchar(20)),</span><br><span class="line">    cast(a.[2011-04] as varchar(20)),</span><br><span class="line">    cast(a.[2011-05] as varchar(20)),</span><br><span class="line">    cast(a.[2011-06] as varchar(20)),</span><br><span class="line">    cast(a.[2011-07] as varchar(20)),</span><br><span class="line">    cast(a.[2011-08] as varchar(20)),</span><br><span class="line">    cast(a.[2011-09] as varchar(20)),</span><br><span class="line">    cast(a.[2011-10] as varchar(20)),</span><br><span class="line">    cast(a.[2011-11] as varchar(20)),</span><br><span class="line">    cast(a.[2011-12] as varchar(20)),</span><br><span class="line">    cast(a.[以后年度合计] as varchar(20))</span><br><span class="line">from #tempSaleDtl3 a</span><br><span class="line">left join #product b on a.ProductGUID=b.ProductGUID</span><br><span class="line">left join Project c on b.ProjectGUID=c.ProjectGUID</span><br><span class="line">```</span><br><span class="line"></span><br><span class="line">) t1</span><br><span class="line">order by &#123;1&#125;</span><br><span class="line"> &quot;, &quot;ProjectName&quot;, &quot;orderCode&quot;);</span><br></pre></td></tr></table></figure><p>现在是写好了，但下一个需求让你加两个参数，你的索引位置又得变，还得在<strong>万码丛中</strong>查找你原来索引在哪里的，是不是很恶心？？</p><h3 id="模版字符串闪亮登场啦！"><a href="#模版字符串闪亮登场啦！" class="headerlink" title="模版字符串闪亮登场啦！"></a>模版字符串闪亮登场啦！</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">怎么用？在字符串的双引号前面加一个 `$` 符号，在需要使用变量的地方用`&#123;变量&#125;`就可以了。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var name = &quot;张三&quot;;</span><br><span class="line">var age = 24;</span><br><span class="line">var address = &quot;北京市朝阳区&quot;;</span><br><span class="line">$&quot;我是&#123;name&#125;，今年&#123;age&#125;，家住在&#123;address&#125;&quot;;</span><br><span class="line">//输出 我是张三，今年24，家住在北京市朝阳区</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;变量&#125;`表示在字符串中输出变量的值，当然你也可以是一个表达式或者方法的执行。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&quot;我的生日是&#123;GetBirth()&#125;&quot;;</span><br></pre></td></tr></table></figure><p>当然，调整顺序就显而易见啦，妈妈再也不用担心我把索引位置搞错啦！因为根本没有索引了，哈哈。</p><h3 id="当然两者也可以被混用"><a href="#当然两者也可以被混用" class="headerlink" title="当然两者也可以被混用"></a>当然两者也可以被混用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var name = &quot;张三&quot;;</span><br><span class="line">var age = 24;</span><br><span class="line">var address = &quot;北京市朝阳区&quot;;</span><br><span class="line">string.Format($&quot;我是&#123;name&#125;，今年&#123;age&#125;，家住在&#123;&#123;0&#125;&#125;&quot;, address); </span><br><span class="line">//输出 我是张三，今年24，家住在北京市朝阳区</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">要注意的是需要用两次 &#123;&#123;索引&#125;&#125; 大括号将索引包含起来，因为一次是输出表达式，两次就转义成普通的占位符了，这点要注意！</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      C#后台$的用法
    
    </summary>
    
      <category term="C#" scheme="http://yoursite.com/categories/C/"/>
    
    
      <category term="C#" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>冒泡排序的三种写法</title>
    <link href="http://yoursite.com/2019/01/15/art2/"/>
    <id>http://yoursite.com/2019/01/15/art2/</id>
    <published>2019-01-14T19:23:33.000Z</published>
    <updated>2019-01-14T11:26:34.287Z</updated>
    
    <content type="html"><![CDATA[<h1 id="十大排序算法之"><a href="#十大排序算法之" class="headerlink" title="十大排序算法之"></a>十大排序算法之</h1><h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><p>好的，开始总结第一个排序算法，冒泡排序。我想对于它每个学过C语言的都会了解的吧，这可能是很多人接触的第一个排序算法。</p><h4 id="1-算法描述"><a href="#1-算法描述" class="headerlink" title="(1)算法描述"></a>(1)算法描述</h4><blockquote><p>冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。</p></blockquote><h4 id="2-算法描述和实现"><a href="#2-算法描述和实现" class="headerlink" title="(2)算法描述和实现"></a>(2)算法描述和实现</h4><p>具体算法描述如下：</p><ul><li><p><1>.比较相邻的元素。如果第一个比第二个大，就交换它们两个；</1></p></li><li><p><2>.对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；</2></p></li><li><p><3>.针对所有的元素重复以上的步骤，除了最后一个；</3></p></li><li><p><4>.重复步骤1~3，直到排序完成。</4></p><p><strong>JavaScript代码实现：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">function bubbleSort(arr) &#123;</span><br><span class="line">    var len = arr.length;</span><br><span class="line">    for (var i = 0; i &lt; len; i++) &#123;</span><br><span class="line">        for (var j = 0; j &lt; len - 1 - i; j++) &#123;</span><br><span class="line">            if (arr[j] &gt; arr[j+1]) &#123;        //相邻元素两两对比</span><br><span class="line">                var temp = arr[j+1];        //元素交换</span><br><span class="line">                arr[j+1] = arr[j];</span><br><span class="line">                arr[j] = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return arr;</span><br><span class="line">&#125;</span><br><span class="line">var arr=[3,44,38,5,47,15,36,26,27,2,46,4,19,50,48];</span><br><span class="line">console.log(bubbleSort(arr));//[2, 3, 4, 5, 15, 19, 26, 27, 36, 38, 44, 46, 47, 48, 50]</span><br></pre></td></tr></table></figure><blockquote><p><strong>改进冒泡排序：</strong> 设置一标志性变量pos,用于记录每趟排序中最后一次进行交换的位置。由于pos位置之后的记录均已交换到位,故在进行下一趟排序时只要扫描到pos位置即可。</p></blockquote><p>改进后算法如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">function bubbleSort2(arr) &#123;</span><br><span class="line">    console.time(&apos;改进后冒泡排序耗时&apos;);</span><br><span class="line">    var i = arr.length-1;  //初始时,最后位置保持不变</span><br><span class="line">    while ( i&gt; 0) &#123;</span><br><span class="line">        var pos= 0; //每趟开始时,无记录交换</span><br><span class="line">        for (var j= 0; j&lt; i; j++)</span><br><span class="line">            if (arr[j]&gt; arr[j+1]) &#123;</span><br><span class="line">                pos= j; //记录交换的位置</span><br><span class="line">                var tmp = arr[j]; arr[j]=arr[j+1];arr[j+1]=tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        i= pos; //为下一趟排序作准备</span><br><span class="line">     &#125;</span><br><span class="line">     console.timeEnd(&apos;改进后冒泡排序耗时&apos;);</span><br><span class="line">     return arr;</span><br><span class="line">&#125;</span><br><span class="line">var arr=[3,44,38,5,47,15,36,26,27,2,46,4,19,50,48];</span><br><span class="line">console.log(bubbleSort2(arr));//[2, 3, 4, 5, 15, 19, 26, 27, 36, 38, 44, 46, 47, 48, 50]</span><br></pre></td></tr></table></figure><blockquote><p>传统冒泡排序中每一趟排序操作只能找到一个最大值或最小值,我们考虑利用在每趟排序中进行正向和反向两遍冒泡的方法一次可以得到两个最终值(最大者和最小者) , 从而使排序趟数几乎减少了一半。</p></blockquote><p>改进后的算法实现为:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">bubbleSort3</span>(<span class="params">arr3</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> low = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> high= arr.length<span class="number">-1</span>; <span class="comment">//设置变量的初始值</span></span><br><span class="line">    <span class="keyword">var</span> tmp,j;</span><br><span class="line">    <span class="built_in">console</span>.time(<span class="string">'2.改进后冒泡排序耗时'</span>);</span><br><span class="line">    <span class="keyword">while</span> (low &lt; high) &#123;</span><br><span class="line">        <span class="keyword">for</span> (j= low; j&lt; high; ++j) <span class="comment">//正向冒泡,找到最大者</span></span><br><span class="line">            <span class="keyword">if</span> (arr[j]&gt; arr[j+<span class="number">1</span>]) &#123;</span><br><span class="line">                tmp = arr[j]; arr[j]=arr[j+<span class="number">1</span>];arr[j+<span class="number">1</span>]=tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        --high;                 <span class="comment">//修改high值, 前移一位</span></span><br><span class="line">        <span class="keyword">for</span> (j=high; j&gt;low; --j) <span class="comment">//反向冒泡,找到最小者</span></span><br><span class="line">            <span class="keyword">if</span> (arr[j]&lt;arr[j<span class="number">-1</span>]) &#123;</span><br><span class="line">                tmp = arr[j]; arr[j]=arr[j<span class="number">-1</span>];arr[j<span class="number">-1</span>]=tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        ++low;                  <span class="comment">//修改low值,后移一位</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">console</span>.timeEnd(<span class="string">'2.改进后冒泡排序耗时'</span>);</span><br><span class="line">    <span class="keyword">return</span> arr3;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> arr=[<span class="number">3</span>,<span class="number">44</span>,<span class="number">38</span>,<span class="number">5</span>,<span class="number">47</span>,<span class="number">15</span>,<span class="number">36</span>,<span class="number">26</span>,<span class="number">27</span>,<span class="number">2</span>,<span class="number">46</span>,<span class="number">4</span>,<span class="number">19</span>,<span class="number">50</span>,<span class="number">48</span>];</span><br><span class="line"><span class="built_in">console</span>.log(bubbleSort3(arr));<span class="comment">//[2, 3, 4, 5, 15, 19, 26, 27, 36, 38, 44, 46, 47, 48, 50]</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      冒泡排序
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="算法" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Li的第一篇文章</title>
    <link href="http://yoursite.com/2019/01/13/art1/"/>
    <id>http://yoursite.com/2019/01/13/art1/</id>
    <published>2019-01-13T10:38:22.000Z</published>
    <updated>2019-01-13T02:54:54.082Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><p>这是我的第一篇Hexo文章，欢迎你的到来</p>]]></content>
    
    <summary type="html">
    
      接触Hexo的第一篇文章
    
    </summary>
    
      <category term="First" scheme="http://yoursite.com/categories/First/"/>
    
    
      <category term="Hello World" scheme="http://yoursite.com/tags/Hello-World/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/01/13/hello-world/"/>
    <id>http://yoursite.com/2019/01/13/hello-world/</id>
    <published>2019-01-13T00:43:26.741Z</published>
    <updated>2019-01-13T00:43:26.741Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
